<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--继承springBoot的父级项目-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!--当前项目的种子说明-->
    <groupId>com.ourRealm</groupId>
    <artifactId>boys</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>boys</name>
    <description>Demo project for Spring Boot</description>

    <!--属性配置-->
    <properties>
        <java.version>1.8</java.version>
        <!--声明一下fastJson jar包的版本号-->
        <fastjson.version>1.1.40</fastjson.version>
        <guava.version>17.0</guava.version>
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <commons-codec.version>1.9</commons-codec.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!--springBoot的web项目起步依赖，不需要写版本号，因为上面继承的父级项目中声明了对应的版本好-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>


        <!--以下是springBoot对jsp页面的开发所需,暂且搁置，有问题-->
        <!--引入springBoot内嵌的tomcat对jsp支持的解析包，同时引入三个jar包，支持页面开发-->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
        </dependency>

        <!--以下三个是开发页面需要的jar包依赖-->
        <dependency>
            <!--servlet依赖的jar包start,不需要加版本号，因为父项目中进行了规定-->
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <dependency>
            <!--jsp依赖的jar包start,需要加版本号，父类没有-->
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>2.3.1</version>
        </dependency>

        <dependency>
            <!--jstl标签依赖的jar包start,不需要版本号，父类有规定版本号-->
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>

        <!--数据库连接需要的jar包依赖-->
        <dependency>
            <!--加载mybatis整合springBoot-->
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <!--Mysql的jdbc驱动包依赖-->
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!--springBoot开发自动热部署插件-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <!--springBoot集成redis的起步依赖jar包-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!--springBoot集成thymeleaf模板引擎-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!--开发中需要的另外的jar包集合-->
        <!-- fastjson json -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <!-- google java lib -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <!-- GENERAL UTILS begin -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <!--springBoot提供的编译打包插件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--mybatis反向工程的插件引入,**之前成功了，不知道为撒，现在生成的文件有点问题**-->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.6</version>
                <configuration>
                    <!--配置文件-->
                    <configurationFile>GeneratorMapper.xml</configurationFile>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>

        </plugins>

        <resources>
            <!--相当于一个资源管理器-->
            <resource>
                <!--表示将src/main/java下的所有文件编译到class文件中，因为不能编译xml文件所以要include加上xml-->
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <!--表示将resources中的所有文件都编译到class文件中去-->
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
            <!--以下是为了使用jsp页面的一个配置，但是jsp页面一直引入失败，就先注释罢了-->
            <!--<resource>-->
            <!--&lt;!&ndash;表示将webapp下的所有文件编译到META-INF/resources中&ndash;&gt;-->
            <!--<directory>src/main/webapp</directory>-->
            <!--<targetPath>META-INF/resources</targetPath>-->
            <!--<includes>-->
            <!--<include>**/*.*</include>-->
            <!--</includes>-->
            <!--</resource>-->

        </resources>

    </build>

</project>
